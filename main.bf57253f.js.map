{"version":3,"sources":["scripts/main.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","changeScore","gameField","document","querySelector","cellsNodes","querySelectorAll","cellsNumbers","map","cell","innerHTML","trim","messageContainer","messageLose","messageStart","winMessage","startButton","showChangeScore","cellSound","winSound","loseSound","initialScore","oldScore","score","getRandomCell","emptyCells","filter","isEmptyCell","value","Math","random","floor","indexOf","updateBoard","forEach","index","_cell$classList2","_cell$classList","classList","remove","apply","add","concat","isGameOver","setTimeout","style","opacity","play","isWin","moveColumn","movement","col","column","row","currentIndex","push","filteredColumn","num","emptyCellsLength","zeroArray","fill","updatedColumn","moveRow","filteredRow","updatedRow","j","resetGame","_cell$classList3","find","disableKeyboardEvents","includes","handleKeyDown","e","defaultPrevented","key","transform","preventDefault","enableKeyboardEvents","window","addEventListener","removeEventListener"],"mappings":"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","file":"main.bf57253f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('.game-field');\nconst cellsNodes = Array.from(gameField.querySelectorAll('td'));\nconst cellsNumbers = cellsNodes.map(cell => +cell.innerHTML.trim());\n\nconst messageContainer = document.querySelector('.message-container');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\n\nconst startButton = document.querySelector('.start');\nconst showChangeScore = document.querySelector('.show-change-score');\n\nconst cellSound = document.querySelector('#cell__sound');\nconst winSound = document.querySelector('#win__sound');\nconst loseSound = document.querySelector('#lose__sound');\n\nlet initialScore = 0;\nlet oldScore = initialScore;\nlet changeScore;\nconst score = document.querySelector('.game-score');\n\nfunction getRandomCell() {\n  const emptyCells = cellsNodes.filter(isEmptyCell);\n\n  if (emptyCells.length === 0) {\n    return;\n  }\n\n  const value = Math.random() > 0.9 ? 4 : 2;\n  const index = Math.floor(Math.random() * emptyCells.length);\n  const cell = emptyCells[index];\n\n  cell.innerHTML = value;\n  cellsNumbers[cellsNodes.indexOf(cell)] = value;\n}\n\nfunction isEmptyCell(cell) {\n  return +cell.innerHTML < 2;\n}\n\nfunction updateBoard() {\n  cellsNodes.forEach((cell, index) => {\n    if (cellsNumbers[index] === 0) {\n      cell.innerHTML = '';\n      cell.classList.remove(...Array.from(cell.classList));\n      cell.classList.add(`field-cell`);\n\n      return;\n    }\n    cell.innerHTML = cellsNumbers[index];\n    cell.classList.remove(...Array.from(cell.classList));\n\n    cell.classList.add(\n      `field-cell`,\n      `field-cell--${cellsNumbers[index]}`,\n      'tile'\n    );\n  });\n\n  if (isGameOver()) {\n    setTimeout(() => {\n      messageLose.classList.remove('hidden');\n      messageStart.classList.remove('hidden');\n      messageContainer.style.opacity = 0.7;\n      startButton.classList.add('restart-lose');\n      startButton.innerHTML = 'Restart';\n      loseSound.play();\n    }, 1000);\n  }\n\n  if (isWin()) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction moveColumn(movement) {\n  for (let col = 0; col < 4; col++) {\n    const column = [];\n\n    for (let row = 0; row < 4; row++) {\n      const currentIndex = row * 4 + col;\n\n      column.push(cellsNumbers[currentIndex]);\n    }\n\n    let filteredColumn = column.filter(num => num > 0);\n\n    for (let index = 0; index < filteredColumn.length; index++) {\n      if (filteredColumn[index] === filteredColumn[index + 1]) {\n        initialScore += filteredColumn[index + 1] * 2;\n        filteredColumn[index] *= 2;\n        filteredColumn[index + 1] = 0;\n        ++index;\n      }\n    }\n    filteredColumn = filteredColumn.filter(num => num > 0);\n\n    const emptyCellsLength = 4 - filteredColumn.length;\n\n    const zeroArray = Array(emptyCellsLength).fill(0);\n    let updatedColumn;\n\n    if (movement === 'up') {\n      updatedColumn = filteredColumn.concat(zeroArray);\n    } else {\n      updatedColumn = zeroArray.concat(filteredColumn);\n    }\n\n    for (let row = 0; row < 4; row++) {\n      cellsNumbers[row * 4 + col] = updatedColumn[row];\n    }\n  }\n  cellSound.play();\n}\n\nfunction moveRow(movement) {\n  for (let i = 0; i < 16; i += 4) {\n    const row = cellsNumbers.slice(i, i + 4);\n    let filteredRow = row.filter(num => num > 0);\n\n    for (let index = 0; index < filteredRow.length; index++) {\n      if (filteredRow[index] === filteredRow[index + 1]) {\n        initialScore += +filteredRow[index + 1] * 2;\n        filteredRow[index + 1] *= 2;\n        filteredRow[index] = 0;\n        index++;\n      }\n    }\n\n    filteredRow = filteredRow.filter(num => num > 0);\n\n    const emptyCellsLength = 4 - filteredRow.length;\n    const zeroArray = Array(emptyCellsLength).fill(0);\n    let updatedRow;\n\n    if (movement === 'right') {\n      updatedRow = zeroArray.concat(filteredRow);\n    } else {\n      updatedRow = filteredRow.concat(zeroArray);\n    }\n\n    for (let j = 0; j < 4; j++) {\n      cellsNumbers[i + j] = updatedRow[j];\n    }\n  }\n  cellSound.play();\n}\n\nfunction resetGame() {\n  cellsNumbers.fill(0);\n\n  cellsNodes.forEach(cell => {\n    cell.innerHTML = '';\n    cell.classList.remove(...Array.from(cell.classList));\n    cell.classList.add('field-cell');\n  });\n\n  initialScore = 0;\n  score.innerHTML = '0';\n}\n\nfunction isWin() {\n  if (cellsNumbers.find(num => num === 2048)) {\n    disableKeyboardEvents();\n    winSound.play();\n\n    return true;\n  }\n}\n\nfunction isGameOver() {\n  if (cellsNumbers.includes(0)) {\n    return false;\n  }\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 3; col++) {\n      const index = row * 4 + col;\n\n      if (cellsNumbers[index] === cellsNumbers[index + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let row = 0; row < 3; row++) {\n    for (let col = 0; col < 4; col++) {\n      const index = row * 4 + col;\n\n      if (cellsNumbers[index] === cellsNumbers[index + 4]) {\n        return false;\n      }\n    }\n  }\n  disableKeyboardEvents();\n\n  return true;\n}\n\nstartButton.addEventListener('click', () => {\n  if (isGameOver()) {\n    disableKeyboardEvents();\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n    messageContainer.style.opacity = 0;\n    resetGame();\n  }\n  startButton.innerHTML = 'Start';\n  startButton.classList.add('restart');\n  startButton.innerHTML = 'Restart';\n  startButton.classList.remove('restart-lose');\n  resetGame();\n\n  getRandomCell(cellsNodes, cellsNumbers);\n  getRandomCell(cellsNodes, cellsNumbers);\n  updateBoard();\n\n  enableKeyboardEvents();\n});\n\nfunction handleKeyDown(e) {\n  if (e.defaultPrevented) {\n    return;\n  }\n\n  switch (e.key) {\n    case 'Down':\n    case 'ArrowDown':\n      oldScore = initialScore;\n      moveColumn('down');\n      updateBoard();\n      getRandomCell();\n      updateBoard();\n      score.innerHTML = initialScore;\n      changeScore = initialScore - oldScore;\n\n      if (changeScore > 0) {\n        showChangeScore.innerHTML = `+${changeScore}`;\n        showChangeScore.style.opacity = 1;\n        showChangeScore.style.transform = 'translateY(-15px)';\n\n        setTimeout(() => {\n          showChangeScore.style.opacity = 0;\n          showChangeScore.style.transform = 'translateY(0)';\n        }, 800);\n      }\n\n      break;\n    case 'Up':\n    case 'ArrowUp':\n      oldScore = initialScore;\n\n      moveColumn('up');\n      updateBoard();\n      getRandomCell();\n      updateBoard();\n      score.innerHTML = initialScore;\n      changeScore = initialScore - oldScore;\n\n      if (changeScore > 0) {\n        showChangeScore.innerHTML = `+${changeScore}`;\n        showChangeScore.style.opacity = 1;\n        showChangeScore.style.transform = 'translateY(-15px)';\n\n        setTimeout(() => {\n          showChangeScore.style.opacity = 0;\n          showChangeScore.style.transform = 'translateY(0)';\n        }, 800);\n      }\n\n      break;\n\n    case 'Left':\n    case 'ArrowLeft':\n      oldScore = initialScore;\n\n      moveRow('left');\n      updateBoard();\n      getRandomCell();\n      updateBoard();\n      score.innerHTML = initialScore;\n      changeScore = initialScore - oldScore;\n\n      if (changeScore > 0) {\n        showChangeScore.innerHTML = `+${changeScore}`;\n        showChangeScore.style.opacity = 1;\n        showChangeScore.style.transform = 'translateY(-15px)';\n\n        setTimeout(() => {\n          showChangeScore.style.opacity = 0;\n          showChangeScore.style.transform = 'translateY(0)';\n        }, 800);\n      }\n      break;\n    case 'Right':\n    case 'ArrowRight':\n      oldScore = initialScore;\n\n      moveRow('right');\n      updateBoard();\n      getRandomCell();\n      updateBoard();\n      score.innerHTML = initialScore;\n      changeScore = initialScore - oldScore;\n\n      if (changeScore > 0) {\n        showChangeScore.innerHTML = `+${changeScore}`;\n        showChangeScore.style.opacity = 1;\n        showChangeScore.style.transform = 'translateY(-15px)';\n\n        setTimeout(() => {\n          showChangeScore.style.opacity = 0;\n          showChangeScore.style.transform = 'translateY(0)';\n        }, 800);\n      }\n\n      break;\n    default:\n      return;\n  }\n\n  e.preventDefault();\n}\n\nfunction enableKeyboardEvents() {\n  window.addEventListener('keydown', handleKeyDown);\n}\n\nfunction disableKeyboardEvents() {\n  window.removeEventListener('keydown', handleKeyDown);\n}\n"]}